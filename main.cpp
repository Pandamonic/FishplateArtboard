// ---------------------------------------------------------------------------
// 描述: Qt 应用程序的主入口点。
//       负责创建 QApplication 实例和主窗口 MainWindow 实例，
//       并启动 Qt 的事件循环。
// ---------------------------------------------------------------------------

/// @note 这部分是Qt自己生成的代码，大部分情况无需改动。

#include "mainwindow.h"   // 包含主窗口类的头文件
#include <QApplication>    // 包含 QApplication 类的头文件，它是所有 Qt GUI 应用程序的基础

/// @brief 应用程序的主函数 (main function)。
/// 这是 C++ 程序的入口点。对于 Qt 应用程序，它通常执行以下操作：
/// 1. 创建一个 QApplication 对象 `a`，用于管理应用程序级别的设置和事件循环。
///    `argc` 和 `argv` 是从命令行传递给应用程序的参数。
/// 2. 创建应用程序的主窗口对象 `w` (MainWindow 的实例)。
/// 3. 调用 `w.show()` 来显示主窗口。
/// 4. 调用 `a.exec()` 来启动 Qt 的事件循环。程序将在此处停留，
///    等待和处理用户输入、窗口事件等，直到应用程序退出。
/// @param argc 命令行参数的数量。
/// @param argv 命令行参数的数组 (字符串形式)。
/// @return 应用程序的退出状态码。0 表示成功退出。
int main(int argc, char *argv[])
{
    // 1. 创建 QApplication 对象。每个 Qt GUI 应用程序都需要一个 QApplication 对象。
    QApplication a(argc, argv);

    // 2. 创建主窗口对象 MainWindow 的实例。
    MainWindow w;

    // 3. 显示主窗口。
    //    调用 show() 会使窗口变为可见状态，并开始接收事件。
    w.show();

    // 4. 启动 Qt 的事件循环。
    //    a.exec() 会进入主事件循环，程序将在这里等待事件发生（如鼠标点击、键盘输入等）
    //    并分发这些事件给相应的对象进行处理。
    //    只有当事件循环结束时（例如，用户关闭主窗口，或调用 QApplication::quit()），
    //    exec() 才会返回一个退出码。
    return a.exec();
}
